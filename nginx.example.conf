events {}
http {
    resolver 127.0.0.11 valid=30s;

    server {
        listen 80;
        server_name dashboard.example.com ws.example.com;
        return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name dashboard.example.com;

        ssl_certificate /etc/letsencrypt/live/dashboard.example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dashboard.example.com/privkey.pem;

        location / {
            set $service_host frontend:3000;
            proxy_pass http://$service_host;  # Forward traffic to the client service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }

        location ^~ /api/ {
            set $service_host backend:5000;
            proxy_pass http://$service_host;  # Forward traffic to the HTTP backend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;  # Ensure cookies are passed along
        }

        location /similarity {
            set $service_host word2vec:5001;
            proxy_pass http://$service_host;  # Forward traffic to the Word2Vec service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }

    server {
        listen 443 ssl;
        server_name ws.example.com;

        ssl_certificate /etc/letsencrypt/live/ws.example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ws.example.com/privkey.pem;

        location / {
            set $service_host backend:1234;
            proxy_pass http://$service_host;  # Forward traffic to the WebSocket backend service
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
