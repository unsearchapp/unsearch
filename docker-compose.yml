services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "${PGPORT}:${PGPORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      start_period: 0s
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: backend-image:latest
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: development
    ports:
      - "${WS_PORT}:${WS_PORT}"
      - "${HTTP_PORT}:${HTTP_PORT}"
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
      - ./packages:/usr/src/app/packages
    environment:
      - WS_PORT
      - HTTP_PORT
      - PGUSER
      - PGHOST
      - PGDATABASE
      - PGPASSWORD
      - PGPORT
      - JWT_SECRET
      - LOG_LEVEL
      - WORD2VEC_URL
      - WEBAPP_URL
      - PRICE_ID
      - STRIPE_PRIVATE_KEY
      - STRIPE_SECRET
      - SELF_HOSTED
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: frontend-image:latest
    build:
      context: .
      dockerfile: client/Dockerfile
      target: development
    environment:
      - CLIENT_PORT
      - APP_URL
      - VITE_SELF_HOSTED=${SELF_HOSTED}
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    volumes:
      - ./client:/usr/src/app/client
      - /usr/src/app/client/node_modules
      - /usr/src/app/packages/node_modules
      - ./packages:/usr/src/app/packages

  word2vec:
    build:
      context: ./word2vec
      dockerfile: Dockerfile
      target: development
    environment:
      - WORD2VEC_PORT
    volumes:
      - ./word2vec:/app
    ports:
      - "${WORD2VEC_PORT}:${WORD2VEC_PORT}"
    depends_on:
      - postgres

volumes:
  postgres-data: